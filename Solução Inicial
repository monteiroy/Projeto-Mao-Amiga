# Dicion√°rio que armazena o total de itens doados por subtipo/detalhe
inventario = {
    # Estrutura: "alimentos": {"arroz": {"1kg": 10, "5kg": 2}, "feij√£o": {"500g": 5}}
    "alimentos": {},
    # Estrutura: "roupas": {"camisa": {"M": 5, "G": 3}, "short": {"P": 2}}
    "roupas": {}
}

# Lista que guarda o hist√≥rico de doadores e suas doa√ß√µes
doadores = []

# Fun√ß√£o para adicionar uma nova doa√ß√£o
def adicionar_doacao():
    nome = input("Nome do doador: ")
    tipo = input("Tipo da doa√ß√£o (alimentos/roupas): ").lower()
    
    # Verifica se o tipo de doa√ß√£o √© v√°lido
    if tipo in inventario:
        item = input(f"Especifique o item doado ({tipo}): ").lower()
        detalhe = "" # Vari√°vel para armazenar o detalhe (peso ou tamanho)

        # --- L√≥gica Condicional para Detalhes ---
        if tipo == "alimentos":
            detalhe = input("Peso do alimento (ex: 1kg, 500g): ").lower()
        elif tipo == "roupas":
            detalhe = input("Tamanho da roupa (ex: P, M, G): ").upper()
        # ----------------------------------------
        
        # Pede a quantidade
        while True:
            try:
                quantidade = int(input("Quantidade doada: "))
                if quantidade > 0:
                    break
                else:
                    print("A quantidade deve ser um n√∫mero positivo.")
            except ValueError:
                print("Entrada inv√°lida. Por favor, digite um n√∫mero inteiro.")


        # 1. Atualiza o invent√°rio total por item e detalhe (sub-sub-dicion√°rio)
        
        # Garante que o item (arroz, camisa) exista no invent√°rio da categoria
        if item not in inventario[tipo]:
            inventario[tipo][item] = {} # Cria o dicion√°rio interno para os detalhes (peso/tamanho)

        # Adiciona a quantidade ao detalhe espec√≠fico (1kg, M, etc.)
        # .get(detalhe, 0) pega a quantidade atual daquele detalhe ou 0 se for a primeira vez
        inventario[tipo][item][detalhe] = inventario[tipo][item].get(detalhe, 0) + quantidade
        
        # 2. Adiciona o doador ao hist√≥rico
        doadores.append({"nome": nome, "tipo": tipo, "item": item, "detalhe": detalhe, "quantidade": quantidade})
        
        print(f"Doa√ß√£o de {quantidade} unidades de {item} ({detalhe}) registrada com sucesso!\n")
    else:
        print("Tipo de doa√ß√£o inv√°lido. Use 'alimentos' ou 'roupas'.\n")

# Fun√ß√£o para mostrar o resumo total das doa√ß√µes
def mostrar_resumo():
    print("\nüì¶ Resumo Detalhado das Doa√ß√µes:")
    total_geral = 0
    
    for tipo, itens in inventario.items():
        print(f"\n Categoria: {tipo.upper()}")
        
        total_por_categoria = 0
        
        if itens:
            for item, detalhes in itens.items():
                print(f"  > {item.capitalize()}:")
                
                total_por_item = 0
                for detalhe, quantidade in detalhes.items():
                    # Ajusta a exibi√ß√£o para ser mais informativa
                    rotulo = "Peso" if tipo == "alimentos" else "Tamanho"
                    print(f"    - {rotulo} **{detalhe}**: {quantidade} unidades")
                    total_por_item += quantidade
                
                print(f"    (Total de {item.capitalize()}: {total_por_item} unidades)")
                total_por_categoria += total_por_item
        else:
            print("Nenhum item registrado.")
            
        print(f"\nTotal geral de unidades de {tipo}: {total_por_categoria}\n")
        total_geral += total_por_categoria

    print(f"Total geral de unidades no invent√°rio: {total_geral}")
    print()

# Fun√ß√£o para listar todos os doadores e suas doa√ß√µes
def listar_doadores():
    print("\nüë• Lista de Doadores:")
    if doadores:
        for d in doadores:
            # Exibe o detalhe (peso/tamanho)
            print(f"{d['nome']} doou {d['quantidade']} unidades de {d['item']} (Detalhe: {d['detalhe']}) - Categoria: {d['tipo']}")
    else:
        print("Nenhum doador registrado ainda.")
    print()

# Menu principal do programa
def menu():
    while True:
        print("\nGerenciamento de Doa√ß√µes")
        print("1. Adicionar doa√ß√£o")
        print("2. Mostrar resumo detalhado")
        print("3. Listar doadores")
        print("4. Sair")
        opcao = input("Escolha uma op√ß√£o: ")

        # Chama a fun√ß√£o correspondente √† op√ß√£o escolhida
        if opcao == "1":
            adicionar_doacao()
        elif opcao == "2":
            mostrar_resumo()
        elif opcao == "3":
            listar_doadores()
        elif opcao == "4":
            print("Encerrando o sistema. At√© mais!")
            break
        else:
            print("Op√ß√£o inv√°lida. Tente novamente.\n")

# Inicia o programa chamando o menu
if __name__ == "__main__":
    menu()
